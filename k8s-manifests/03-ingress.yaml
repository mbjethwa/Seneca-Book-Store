apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: senecabooks-ingress
  namespace: seneca-bookstore
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
  - host: senecabooks.local
    http:
      paths:
      # Frontend (Root - catch-all, must be last for proper routing)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
---
# Separate ingress for API with rewrite rules
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: senecabooks-api-ingress
  namespace: seneca-bookstore
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: senecabooks.local
    http:
      paths:
      # API Routes with rewrite
      - path: /api/user(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: user-service
            port:
              number: 8000
      - path: /api/catalog(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: catalog-service
            port:
              number: 8000
      - path: /api/order(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: order-service
            port:
              number: 8000
